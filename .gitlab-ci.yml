workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

image: gitlab.ispras.ru:4567/mvg/utopia-eda:latest

variables:
  BUILD_DIR: "build"
  BUILD_PATH: "${UTOPIA_HOME}/${BUILD_DIR}"
  GIT_DEPTH: "1"
  GIT_SUBMODULE_STRATEGY: recursive
  UTOPIA_HOME: "/builds/${CI_PROJECT_PATH}"
  TEST_REPORTS_PATH: "${UTOPIA_HOME}/test-reports/test-results.xml"

stages:
  - build
  - test
  - coverage
  - valgrind

build_project:
  stage: build
  tags:
    - docker

  script:
    - rm -rf ${BUILD_PATH}
    - cd ${UTOPIA_HOME}
    - cmake -S ${UTOPIA_HOME} -B ${BUILD_DIR} -G Ninja
    - cmake --build ${BUILD_DIR}

  artifacts:
    expire_in: 90 min
    paths:
      - ${BUILD_PATH}

test_project:
  stage: test
  tags:
    - docker

  script:
    - cd ${UTOPIA_HOME}
    - rm -rf ${UTOPIA_HOME}/output
    - mkdir -p $(dirname ${TEST_REPORTS_PATH})
    - ${BUILD_PATH}/test/utest --gtest_output="xml:${TEST_REPORTS_PATH}"

  dependencies:
    - build_project

  artifacts:
    expire_in: 10 min
    paths:
      - ${BUILD_PATH}
      - ${TEST_REPORTS_PATH}
    reports:
      junit: ${TEST_REPORTS_PATH}
    when: always

get_coverage_info:
  stage: coverage
  tags:
    - docker

  script:
    - lcov --capture --directory ${UTOPIA_HOME} -o lcoverage.info
    - lcov --remove lcoverage.info "${BUILD_PATH}/*" "${UTOPIA_HOME}/lib/*" "/usr/*" -o clean_cov.info
    - genhtml clean_cov.info -o clean_coverage
  when: always

  dependencies:
    - test_project

  artifacts:
    expire_in: 1 day
    paths:
      - ${UTOPIA_HOME}/clean_coverage

valgrind_test_demo:
  stage: valgrind
  tags:
    - docker

  script:
    - valgrind ${BUILD_PATH}/test/utest --gtest_filter=MiterTest*
  when: manual

  dependencies:
    - build_project

  artifacts:
    expire_in: 10 min
    paths:
      - ${BUILD_PATH}
