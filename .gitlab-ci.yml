workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

image: gitlab.ispras.ru:4567/mvg/utopia-eda/utopia-eda:staccato

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  UTOPIA_HOME: "/builds/${CI_PROJECT_PATH}"
  BUILD: "build"
  BUILD_PATH: "${UTOPIA_HOME}/${BUILD}"
  YOSYS_DIR: "/workdir/yosys"
  MLIR_DIR: "/workdir/circt/llvm/build/lib/cmake/mlir/"
  CIRCT_DIR: "/workdir/circt/build/lib/cmake/circt/"

stages:
  - build
  - test
  - coverage

build_project:
  stage: build
  tags:
    - docker

  script:
    - rm -rf ${BUILD_PATH}
    - cd ${UTOPIA_HOME}
    - cmake -S ${UTOPIA_HOME} -B ${BUILD} -DYosys_ROOT=${YOSYS_DIR} -G Ninja
    - cmake --build ${BUILD}

  artifacts:
    expire_in: 10 min
    paths:
      - ${BUILD_PATH}

test_project:
  stage: test
  tags:
    - docker

  script:
    - cd ${UTOPIA_HOME}
    - rm -rf ${UTOPIA_HOME}/output
    - ${BUILD_PATH}/test/utest

  dependencies:
    - build_project

  artifacts:
    expire_in: 10 min
    paths:
      - ${BUILD_PATH}

get_coverage_info:
  stage: coverage
  tags:
    - docker

  script:
    - lcov --capture --directory ${UTOPIA_HOME} -o lcoverage.info
    - lcov --remove lcoverage.info "${BUILD_PATH}/*" "${UTOPIA_HOME}/lib/*" "/usr/*" -o clean_cov.info
    - genhtml clean_cov.info -o clean_coverage

  dependencies:
    - test_project

  artifacts:
    expire_in: 1 day
    paths:
      - ${UTOPIA_HOME}/clean_coverage

