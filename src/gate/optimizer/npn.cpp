//===----------------------------------------------------------------------===//
//
// Part of the Utopia EDA Project, under the Apache License v2.0
// SPDX-License-Identifier: Apache-2.0
// Copyright 2023 ISP RAS (http://www.ispras.ru)
//
//===----------------------------------------------------------------------===//

#include "gate/optimizer/npn.h"

namespace eda::gate::optimizer {

/// Canonical representatives of NPN classes for 4-variable Boolean functions.
uint16_t npn4[] = {
  0x0000, 0x0001, 0x0003, 0x0006, 0x0007, 0x000f, 0x0016, 0x0017,
  0x0018, 0x0019, 0x001b, 0x001e, 0x001f, 0x003c, 0x003d, 0x003f,
  0x0069, 0x006b, 0x006f, 0x007e, 0x007f, 0x00ff, 0x0116, 0x0117,
  0x0118, 0x0119, 0x011a, 0x011b, 0x011e, 0x011f, 0x012c, 0x012d,
  0x012f, 0x013c, 0x013d, 0x013e, 0x013f, 0x0168, 0x0169, 0x016a,
  0x016b, 0x016e, 0x016f, 0x017e, 0x017f, 0x0180, 0x0181, 0x0182,
  0x0183, 0x0186, 0x0187, 0x0189, 0x018b, 0x018f, 0x0196, 0x0197,
  0x0198, 0x0199, 0x019a, 0x019b, 0x019e, 0x019f, 0x01a8, 0x01a9,
  0x01aa, 0x01ab, 0x01ac, 0x01ad, 0x01ae, 0x01af, 0x01bc, 0x01bd,
  0x01be, 0x01bf, 0x01e8, 0x01e9, 0x01ea, 0x01eb, 0x01ee, 0x01ef,
  0x01fe, 0x033c, 0x033d, 0x033f, 0x0356, 0x0357, 0x0358, 0x0359,
  0x035a, 0x035b, 0x035e, 0x035f, 0x0368, 0x0369, 0x036a, 0x036b,
  0x036c, 0x036d, 0x036e, 0x036f, 0x037c, 0x037d, 0x037e, 0x03c0,
  0x03c1, 0x03c3, 0x03c5, 0x03c6, 0x03c7, 0x03cf, 0x03d4, 0x03d5,
  0x03d6, 0x03d7, 0x03d8, 0x03d9, 0x03db, 0x03dc, 0x03dd, 0x03de,
  0x03fc, 0x0660, 0x0661, 0x0662, 0x0663, 0x0666, 0x0667, 0x0669,
  0x066b, 0x066f, 0x0672, 0x0673, 0x0676, 0x0678, 0x0679, 0x067a,
  0x067b, 0x067e, 0x0690, 0x0691, 0x0693, 0x0696, 0x0697, 0x069f,
  0x06b0, 0x06b1, 0x06b2, 0x06b3, 0x06b4, 0x06b5, 0x06b6, 0x06b7,
  0x06b9, 0x06bd, 0x06f0, 0x06f1, 0x06f2, 0x06f6, 0x06f9, 0x0776,
  0x0778, 0x0779, 0x077a, 0x077e, 0x07b0, 0x07b1, 0x07b4, 0x07b5,
  0x07b6, 0x07bc, 0x07e0, 0x07e1, 0x07e2, 0x07e3, 0x07e6, 0x07e9,
  0x07f0, 0x07f1, 0x07f2, 0x07f8, 0x0ff0, 0x1668, 0x1669, 0x166a,
  0x166b, 0x166e, 0x167e, 0x1681, 0x1683, 0x1686, 0x1687, 0x1689,
  0x168b, 0x168e, 0x1696, 0x1697, 0x1698, 0x1699, 0x169a, 0x169b,
  0x169e, 0x16a9, 0x16ac, 0x16ad, 0x16bc, 0x16e9, 0x177e, 0x178e,
  0x1796, 0x1798, 0x179a, 0x17ac, 0x17e8, 0x18e7, 0x19e1, 0x19e3,
  0x19e6, 0x1bd8, 0x1be4, 0x1ee1, 0x3cc3, 0x6996
};

static_assert(sizeof(npn4)/sizeof(uint16_t) == npn4Num);

/// Canonical representatives of NPN classes for 343 most common 5-variables
/// Boolean functions in OpenABC-D benchmarks.
uint32_t npn5[] = {
  0x000000ff, 0x00000fff, 0x000007ff, 0x000003ff, 0x00007fff, 0x00000001,
  0x00003fff, 0x00000003, 0x00000007, 0x0000000f, 0x0000003f, 0x0000001f,
  0x000001ff, 0x00001ee1, 0x00001fff, 0x0000007f, 0x000003fc, 0x000007f8,
  0x1ee1e11e, 0x00077777, 0x0007f0f7, 0x0000001e, 0x000ff0ff, 0x03fcfc03,
  0x00000ff0, 0x0356fca9, 0x00000777, 0x0001feff, 0x00077770, 0x00006996,
  0x07f8f807, 0x00003cc3, 0x000ffff0, 0x00001eff, 0x003fffc0, 0x000f333f,
  0x000f7778, 0x000003cf, 0x00035557, 0x0003cccf, 0x001fffe0, 0x00001bff,
  0x0000003c, 0x000007f7, 0x00000357, 0x0003fcff, 0x00066660, 0x0000077f,
  0x00000666, 0x0000011f, 0x000707ff, 0x001bff1b, 0x69969669, 0x00066666,
  0x007fff80, 0x000303ff, 0x011ffee0, 0x003c3c3c, 0x00000356, 0x00000006,
  0x00000069, 0x00001eee, 0x00ffff00, 0x00696969, 0x000f333c, 0x3cc3c33c,
  0x00003cff, 0x000006ff, 0x0000033f, 0x0000066f, 0x0ff0f00f, 0x0006666f,
  0x001e1eff, 0x000017e8, 0x000069ff, 0x0000006f, 0x00010357, 0x000001ef,
  0x000001fe, 0x00696900, 0x000017ff, 0x0000001b, 0x00034447, 0x00000017,
  0x00006fff, 0x006fff90, 0x0007fff8, 0x00060666, 0x17e8e817, 0x000006f9,
  0x0001eeef, 0x000001ab, 0x007f7f00, 0x006969ff, 0x00070777, 0x0007777f,
  0x003c3cff, 0x0007f8ff, 0x000f0fff, 0x066ff990, 0x003c3c00, 0x033f566a,
  0x00001ff1, 0x033ffcc0, 0x00000660, 0x0003fffc, 0x01fefe01, 0x001717ff,
  0x00035457, 0x00035556, 0x00077077, 0x06f9f906, 0x001effe1, 0x0357fca8,
  0x000003df, 0x0001fffe, 0x0003dddf, 0x003cffc3, 0x000101ff, 0x000f666f,
  0x0001aaff, 0x0003ccff, 0x06606ff6, 0x000f6669, 0x00001be4, 0x000001af,
  0x006f6f00, 0x0001aaab, 0x001eff1e, 0x000f337f, 0x0001aaef, 0x0017ffe8,
  0x000006f6, 0x000354ff, 0x0666f999, 0x00000018, 0x0001eeff, 0x00000189,
  0x0000011a, 0x00006ff6, 0x0003444f, 0x000019e6, 0x01abfe54, 0x0000035f,
  0x003cff3c, 0x000018e7, 0x01effe10, 0x0069ff96, 0x0003555f, 0x19e6e619,
  0x001be4ff, 0x0007f0ff, 0x03cffc30, 0x01a8fe57, 0x01affe50, 0x1be4e41b,
  0x000f7777, 0x000606ff, 0x0006fff9, 0x000003c0, 0x0000ffff, 0x00000696,
  0x00069696, 0x000001a8, 0x00007eff, 0x0069ff69, 0x000355ff, 0x000003c3,
  0x0356a9fc, 0x00034477, 0x00000180, 0x18e7e718, 0x0003ccfc, 0x00011fff,
  0x000016e9, 0x00000168, 0x0000017f, 0x00010256, 0x000f6666, 0x007fff08,
  0x000001ee, 0x000303cc, 0x03c3fc3c, 0x0001afff, 0x00060696, 0x00000778,
  0x0000069f, 0x000355cf, 0x16e9e916, 0x06f6f909, 0x000f33ff, 0x00000000,
  0x00000198, 0x0003c3c3, 0x0356a956, 0x01bffe40, 0x00077078, 0x00001ffe,
  0x01eafe15, 0x00073377, 0x01efef01, 0x03c0fc3f, 0x0000033c, 0x03d4fc2b,
  0x000354fc, 0x000f737f, 0x0001affb, 0x000355d7, 0x00066066, 0x000f366c,
  0x001999bf, 0x00003ddf, 0x0356a903, 0x000001a9, 0x000001bf, 0x00070778,
  0x0003dcdf, 0x0007f7f0, 0x03defc21, 0x0007aaaf, 0x0001abff, 0x000101ee,
  0x000303c3, 0x177ee881, 0x000317ff, 0x000107ff, 0x00060699, 0x035afc5a,
  0x07f0f80f, 0x001b1bff, 0x00066000, 0x00063360, 0x017ffe80, 0x00010ee1,
  0x0001177f, 0x000007f0, 0x000101aa, 0x0007700f, 0x00001ff3, 0x00010eee,
  0x011aa77f, 0x00010255, 0x033cfcc3, 0x01a9fe56, 0x0003ccc0, 0x033c5669,
  0x001eff2d, 0x00011ee1, 0x00000116, 0x00077000, 0x0778f887, 0x0000035b,
  0x0690f96f, 0x0000011e, 0x00000690, 0x00000669, 0x0001aaaf, 0x0000037f,
  0x00000019, 0x00018081, 0x0000035a, 0x019ffe60, 0x000ff00f, 0x00034474,
  0x0003dcff, 0x001ee11e, 0x0001011e, 0x06669999, 0x00003dfd, 0x00019999,
  0x0006f0f6, 0x00033fff, 0x0000013f, 0x00077377, 0x0006999f, 0x0000007e,
  0x000102de, 0x000001ae, 0x013ffec0, 0x00003dff, 0x00030fff, 0x003fff00,
  0x0006f1f1, 0x001eff78, 0x000707f0, 0x00066069, 0x0001a9a9, 0x00011ef1,
  0x00018aa9, 0x0003c0c3, 0x00012aa9, 0x00000ff3, 0x0000003d, 0x000003dd,
  0x00031557, 0x0006fff6, 0x001fff00, 0x0000067f, 0x000007b7, 0x001f3f40,
  0x0003ccdd, 0x03d4d403, 0x000003de, 0x01eefe11, 0x00066996, 0x00069990,
  0x0018ffe7, 0x000019ff, 0x0001abee, 0x000001ea, 0x000f77f0, 0x001f1f60,
  0x00011ee0, 0x000006f3, 0x00003ffc, 0x000344ff, 0x000101a9, 0x0000016b,
  0x003c693c, 0x001ee100, 0x0003fcfc, 0x00011eff, 0x0660f99f, 0x011768e8,
  0x0006f9ff, 0x0007fff0, 0x00013fff, 0x035afca5, 0x000f33cf, 0x00077887,
  0x000617ff, 0x00033cc3, 0x001b5f1b, 0x0003cfff, 0x000787ff, 0x0003c3ff,
  0x00070fff, 0x003f5f60, 0x00034557, 0x000357ff, 0x000f3355, 0x00066fff,
  0x001ee1ff
};

static_assert(sizeof(npn5)/sizeof(uint32_t) == npn5Num);

} // namespace eda::gate::optimizer
