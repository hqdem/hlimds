workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

image: gitlab.ispras.ru:4567/mvg/utopia-eda:latest

variables:
  BUILD_DIR: "build"
  BUILD_PATH: "${UTOPIA_HOME}/${BUILD_DIR}"
  GIT_DEPTH: "1"
  GIT_SUBMODULE_STRATEGY: recursive
  UTOPIA_HOME: "/builds/${CI_PROJECT_PATH}"
  TEST_REPORTS_PATH: "${UTOPIA_HOME}/test-reports/test-results.xml"

stages:
  - build
  - test
  - coverage
  - valgrind
  - trigger_others

build_project:
  stage: build
  tags:
    - docker

  script:
    - rm -rf ${BUILD_PATH}
    - cd ${UTOPIA_HOME}
    - cmake -S ${UTOPIA_HOME} -B ${BUILD_DIR} -G Ninja
    - cmake --build ${BUILD_DIR}

  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

  artifacts:
    expire_in: 90 min
    paths:
      - ${BUILD_PATH}

test_project:
  stage: test
  tags:
    - docker

  script:
    - cd ${UTOPIA_HOME}
    - rm -rf ${UTOPIA_HOME}/output
    - mkdir -p $(dirname ${TEST_REPORTS_PATH})
    - ${BUILD_PATH}/test/utest --gtest_output="xml:${TEST_REPORTS_PATH}"

  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

  dependencies:
    - build_project

  artifacts:
    expire_in: 60 min
    paths:
      - ${BUILD_PATH}
      - ${TEST_REPORTS_PATH}
    reports:
      junit: ${TEST_REPORTS_PATH}
    when: always

get_coverage_info:
  stage: coverage
  coverage: '/^lines: \d+\.\d+\% \(.*\)/'
  tags:
    - docker

  script:
    - lcov --capture --directory ${UTOPIA_HOME}
            -o lcoverage.info
    - lcov --remove lcoverage.info
             "${BUILD_PATH}/*"
             "${CIRCT_ROOT}/*"
             "${UTOPIA_HOME}/lib/*"
             "/usr/*"
             "${Yosys_ROOT}/*"
            -o clean_cov.info
    - genhtml clean_cov.info -o coverage
    - gcovr --root ${UTOPIA_HOME}
            --cobertura ${BUILD_PATH}/coverage.xml --cobertura-pretty
            --gcov-ignore-errors all
            --print-summary

  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  when: always

  dependencies:
    - test_project

  artifacts:
    expire_in: 1 day
    paths:
      - ${UTOPIA_HOME}/coverage
      - ${BUILD_PATH}
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ${BUILD_PATH}/coverage.xml

valgrind_test_demo:
  stage: valgrind
  tags:
    - docker

  script:
    - valgrind ${BUILD_PATH}/test/utest --gtest_filter=MiterTest*

  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  when: manual

  dependencies:
    - build_project

  artifacts:
    expire_in: 10 min
    paths:
      - ${BUILD_PATH}

night_build:
  stage: build
  tags:
    - docker
  script:
    - rm -rf ${BUILD_PATH}
    - cd ${UTOPIA_HOME}
    - cmake -S ${UTOPIA_HOME} -B ${BUILD_DIR} -G Ninja
    - cmake --build ${BUILD_DIR}

  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

trigger_utopia_testing:
  stage: trigger_others
  script:
    - curl -X POST -F token=$UTOPIA_TESTING_BUILD -F ref=main https://gitlab.ispras.ru/api/v4/projects/1645/trigger/pipeline
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - night_build
  when: on_success

trigger_intellect:
  stage: trigger_others
  script:
    - curl -X POST -F token=$INTELLECT_BUILD -F ref=main https://gitlab.ispras.ru/api/v4/projects/2070/trigger/pipeline
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - night_build
  when: on_success

trigger_intellect_testing:
  stage: trigger_others
  script:
    - curl -X POST -F token=$INTELLECT_TESTING_BUILD -F ref=main https://gitlab.ispras.ru/api/v4/projects/2072/trigger/pipeline
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - trigger_intellect
  when: on_success
